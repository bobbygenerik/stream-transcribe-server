name: Android build - whisper_android

on:
  workflow_dispatch:
    inputs:
      whisper_ref:
        description: 'whipper.cpp ref (branch, tag, or commit). Override to pin a commit/tag. Default is a pinned ref below.'
        required: false
        # Default is a pinned known-good ref. Replace this with a specific tag/commit if you want stricter reproducibility.
        default: 'main'
  push:
    branches:
      - main

jobs:
  build:
    name: Build whisper_android APK
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /opt/android-sdk

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-


      - name: Cache Android SDK
        uses: actions/cache@v4
        with:
          path: |
            /opt/android-sdk/cmdline-tools
            /opt/android-sdk/ndk
            /opt/android-sdk/platforms
            /opt/android-sdk/build-tools
          key: ${{ runner.os }}-android-sdk-
          restore-keys: |
            ${{ runner.os }}-android-sdk-

      - name: Install Android SDK commandline tools
        run: |
          sudo mkdir -p /opt/android-sdk/cmdline-tools
          sudo chown -R $USER /opt/android-sdk
          curl -sSfL https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -o /tmp/cmdline-tools.zip
          unzip -q /tmp/cmdline-tools.zip -d /tmp/cmdline-tools
          mkdir -p /opt/android-sdk/cmdline-tools/latest
          mv /tmp/cmdline-tools/cmdline-tools/* /opt/android-sdk/cmdline-tools/latest/

      - name: Install SDK packages
        run: |
          yes | /opt/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=/opt/android-sdk "platform-tools" "platforms;android-33" "ndk;25.2.9519653" "cmake;3.22.1" "build-tools;33.0.2"

      - name: Show Java/SDK versions
        run: |
          java -version
          /opt/android-sdk/cmdline-tools/latest/bin/sdkmanager --version || true

      - name: Grant execute to gradlew
        run: chmod +x ./gradlew || true

      - name: Fetch whisper.cpp sources (shallow)
        run: |
          # Determine ref: workflow input overrides repo pinned ref file
          DEFAULT_REF=$(cat whisper_pinned_ref.txt 2>/dev/null | sed -n '1p' || echo "main")
          REF="${{ github.event.inputs.whisper_ref || DEFAULT_REF }}"
          if [ ! -d "whisper.cpp" ]; then
            git clone --depth 1 --branch "$REF" https://github.com/ggerganov/whisper.cpp.git whisper.cpp || {
              echo "shallow clone of $REF failed; trying full clone"
              git clone https://github.com/ggerganov/whisper.cpp.git whisper.cpp || true
            }
          else
            echo "whisper.cpp already present"
          fi

      - name: Ensure Gradle available
        run: |
          if [ ! -f ./gradlew ]; then
            echo "No gradlew wrapper found â€” installing gradle via apt"
            sudo apt-get update && sudo apt-get install -y gradle
          else
            echo "Using project gradlew"
          fi

      - name: Attempt build of whisper.cpp native lib
        run: |
          # install build tools if missing
          sudo apt-get update && sudo apt-get install -y cmake ninja-build build-essential || true
          if [ -d whisper.cpp ]; then
            pushd whisper.cpp
            mkdir -p build && cd build
            cmake -G Ninja -DCMAKE_BUILD_TYPE=Release .. || true
            ninja -j2 || true
            BUILD_OK=$?
            popd
            if [ "$BUILD_OK" -eq 0 ]; then
              echo "whisper.cpp built successfully"
              echo "WHISPER_CPP_DIR=$(pwd)/whisper.cpp" >> $GITHUB_ENV
            else
              echo "whisper.cpp build failed or produced errors; continuing with stub" >&2
            fi
          else
            echo "whisper.cpp not present; continuing with stub"
          fi

      - name: Build example_app APK
        working-directory: ${{ github.workspace }}
        run: |
          ./gradlew :example_app:assembleDebug --no-daemon --stacktrace

      - name: Upload library and APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: whisper-android-artifacts
          path: |
            **/example_app/build/outputs/apk/debug/*.apk
            **/whisper_android/build/outputs/aar/*.aar
